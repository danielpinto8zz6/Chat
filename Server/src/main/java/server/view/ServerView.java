/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server.view;

import java.util.Observable;
import java.util.Observer;

import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

import server.controller.ServerController;

/**
 *
 * @author daniel
 */
public class ServerView extends javax.swing.JFrame implements Observer {
    private static final long serialVersionUID = 1L;
    private ServerController controller;

    public ServerView(ServerController controller) {
        this.controller = controller;
        controller.addObserver(this);

        initComponents();

        appendText("TCP Port : <b>" + controller.getTcpPort() + "</b> UDP Port : <b>" + controller.getUdpPort()
                + "</b> is now open at <b>" + controller.getHostAddress() + "</b> ");
        appendText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneLog = new javax.swing.JScrollPane();
        jTextPaneLog = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chatroom - Server");

        jTextPaneLog.setEditable(false);
        jTextPaneLog.setContentType("text/html"); // NOI18N
        jScrollPaneLog.setViewportView(jTextPaneLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneLog, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneLog, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void appendText(String text) {
        HTMLDocument doc = (HTMLDocument) jTextPaneLog.getDocument();
        HTMLEditorKit editorKit = (HTMLEditorKit) jTextPaneLog.getEditorKit();
        try {
            editorKit.insertHTML(doc, doc.getLength(), text, 0, 0, null);
            jTextPaneLog.setCaretPosition(doc.getLength());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPaneLog;
    private javax.swing.JTextPane jTextPaneLog;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        if (arg instanceof String[]) {
            String[] str = (String[]) arg;
            switch (str[0]) {
            case "user-joined":
                appendText("<b>User joined</b> " + str[1]);
                appendText("<b>Host</b> " + str[2]);
                appendText("");
                break;
            case "user-exited":
                appendText("<b>User exited</b> " + str[1]);
                appendText("<b>Host</b> " + str[2]);
                appendText("");
                break;
            case "login-failed":
                appendText("<b>" + str[1] + "</b>" + " (" + str[2] + ") tried to login but failed");
                appendText("");
                break;
            }
        }
    }
}
